name: Deploy Next.js to S3

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ca-central-1
  S3_BUCKET: shaikh-portfolio-site
  CLOUDFRONT_DISTRIBUTION_ID: E13Q3LKV517H9V

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build (static export)
        run: |
          npm run build
          test -d out || (echo "‚ùå Next.js export folder ./out not found" && exit 1)

      - name: Configure AWS creds (OIDC)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::980921724830:role/github-role
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: true

      - name: Sync to S3
        run: |
          aws s3 sync ./out "s3://${S3_BUCKET}/" \
            --delete \
            --cache-control max-age=31536000,public \
            --exclude "index.html" --exclude "404.html"

          # Set no-cache on HTML entry points so updates appear instantly
          if [ -f ./out/index.html ]; then
            aws s3 cp ./out/index.html "s3://${S3_BUCKET}/index.html" --cache-control no-cache
          fi
          if [ -f ./out/404.html ]; then
            aws s3 cp ./out/404.html "s3://${S3_BUCKET}/404.html" --cache-control no-cache
          fi

      - name: Invalidate CloudFront (optional)
        if: ${{ env.CLOUDFRONT_DISTRIBUTION_ID != '' }}
        run: |
          echo "Invalidating CloudFront distribution: $CLOUDFRONT_DISTRIBUTION_ID"
          aws cloudfront create-invalidation \
            --distribution-id "$CLOUDFRONT_DISTRIBUTION_ID" \
            --paths "/*"
